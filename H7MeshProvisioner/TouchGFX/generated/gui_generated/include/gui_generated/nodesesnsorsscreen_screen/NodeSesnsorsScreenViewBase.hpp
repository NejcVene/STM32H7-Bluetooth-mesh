/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef NODESESNSORSSCREENVIEWBASE_HPP
#define NODESESNSORSSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/nodesesnsorsscreen_screen/NodeSesnsorsScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <gui/containers/ScreenTitleBar.hpp>
#include <gui/containers/BottomMenu.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/containers/ModalWindow.hpp>
#include <gui/containers/Loader.hpp>

class NodeSesnsorsScreenViewBase : public touchgfx::View<NodeSesnsorsScreenPresenter>
{
public:
    NodeSesnsorsScreenViewBase();
    virtual ~NodeSesnsorsScreenViewBase();
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void goToErrorScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    ScreenTitleBar screenTitleBar1;
    BottomMenu bottomMenu1;
    touchgfx::ScrollableContainer allNodeSensors;
    touchgfx::ModalWindow loaderModal;
    Loader loader1;

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // NODESESNSORSSCREENVIEWBASE_HPP
