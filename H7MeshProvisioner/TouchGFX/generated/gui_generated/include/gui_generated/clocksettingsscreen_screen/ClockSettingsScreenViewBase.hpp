/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CLOCKSETTINGSSCREENVIEWBASE_HPP
#define CLOCKSETTINGSSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/clocksettingsscreen_screen/ClockSettingsScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <gui/containers/ScreenTitleBar.hpp>
#include <gui/containers/BottomMenu.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class ClockSettingsScreenViewBase : public touchgfx::View<ClockSettingsScreenPresenter>
{
public:
    ClockSettingsScreenViewBase();
    virtual ~ClockSettingsScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void GUI_SaveClock()
    {
        // Override and implement this function in ClockSettingsScreen
    }
    virtual void GUI_HourUpBtnClicked()
    {
        // Override and implement this function in ClockSettingsScreen
    }
    virtual void GUI_HourDownBtnClicked()
    {
        // Override and implement this function in ClockSettingsScreen
    }
    virtual void GUI_MinuteUpBtnClicked()
    {
        // Override and implement this function in ClockSettingsScreen
    }
    virtual void GUI_MinuteDownBtnClicked()
    {
        // Override and implement this function in ClockSettingsScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    ScreenTitleBar screenTitleBar1;
    BottomMenu bottomMenu1;
    touchgfx::Container elements;
    touchgfx::Container timeContainerHour;
    touchgfx::Box hourBackground;
    touchgfx::TextAreaWithOneWildcard hourSetText;
    touchgfx::TextArea hourText;
    touchgfx::ButtonWithIcon hourUpBtn;
    touchgfx::ButtonWithIcon hourDownBtn;
    touchgfx::Container timeContainerMinute;
    touchgfx::Box minuteBackground;
    touchgfx::TextAreaWithOneWildcard minuteSetText;
    touchgfx::TextArea minuteText;
    touchgfx::ButtonWithIcon minuteUpBtn;
    touchgfx::ButtonWithIcon minuteDownBtn;
    touchgfx::ButtonWithLabel saveClockBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HOURSETTEXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar hourSetTextBuffer[HOURSETTEXT_SIZE];
    static const uint16_t MINUTESETTEXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar minuteSetTextBuffer[MINUTESETTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ClockSettingsScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CLOCKSETTINGSSCREENVIEWBASE_HPP
