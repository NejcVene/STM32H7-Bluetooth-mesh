/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef NODELEVELSETSCREENVIEWBASE_HPP
#define NODELEVELSETSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/nodelevelsetscreen_screen/NodeLevelSetScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <gui/containers/ScreenTitleBar.hpp>
#include <gui/containers/BottomMenu.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class NodeLevelSetScreenViewBase : public touchgfx::View<NodeLevelSetScreenPresenter>
{
public:
    NodeLevelSetScreenViewBase();
    virtual ~NodeLevelSetScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void GUI_LevelSet()
    {
        // Override and implement this function in NodeLevelSetScreen
    }
    virtual void GUI_ChangeLevelValueText(int value)
    {
        // Override and implement this function in NodeLevelSetScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    ScreenTitleBar screenTitleBar1;
    BottomMenu bottomMenu1;
    touchgfx::Slider levelSetSlider;
    touchgfx::Box box1;
    touchgfx::TextAreaWithOneWildcard valueSetText;
    touchgfx::TextArea valueText;
    touchgfx::ButtonWithLabel levelSetBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t VALUESETTEXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar valueSetTextBuffer[VALUESETTEXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<NodeLevelSetScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<NodeLevelSetScreenViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // NODELEVELSETSCREENVIEWBASE_HPP
