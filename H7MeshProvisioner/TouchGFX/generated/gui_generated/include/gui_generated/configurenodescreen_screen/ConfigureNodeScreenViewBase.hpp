/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONFIGURENODESCREENVIEWBASE_HPP
#define CONFIGURENODESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/configurenodescreen_screen/ConfigureNodeScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>

class ConfigureNodeScreenViewBase : public touchgfx::View<ConfigureNodeScreenPresenter>
{
public:
    ConfigureNodeScreenViewBase();
    virtual ~ConfigureNodeScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void GUI_SaveConfNode()
    {
        // Override and implement this function in ConfigureNodeScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  >  cancelBtn;
    touchgfx::IconButtonStyle< touchgfx::TextButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  >  saveBtn;
    touchgfx::Container container1;
    touchgfx::TiledImage tiledImage2;
    touchgfx::TextAreaWithOneWildcard nodeVendor;
    touchgfx::TextAreaWithOneWildcard nodeUUID;
    touchgfx::TextAreaWithOneWildcard nodeName;
    touchgfx::ScrollableContainer allNodeSubsCont;
    touchgfx::TiledImage tiledImage3;

    /*
     * Wildcard Buffers
     */
    static const uint16_t NODEVENDOR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar nodeVendorBuffer[NODEVENDOR_SIZE];
    static const uint16_t NODEUUID_SIZE = 10;
    touchgfx::Unicode::UnicodeChar nodeUUIDBuffer[NODEUUID_SIZE];
    static const uint16_t NODENAME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar nodeNameBuffer[NODENAME_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ConfigureNodeScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CONFIGURENODESCREENVIEWBASE_HPP
