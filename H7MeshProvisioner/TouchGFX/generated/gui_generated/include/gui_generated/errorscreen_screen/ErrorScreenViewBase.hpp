/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ERRORSCREENVIEWBASE_HPP
#define ERRORSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/errorscreen_screen/ErrorScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <gui/containers/ScreenTitleBar.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ErrorScreenViewBase : public touchgfx::View<ErrorScreenPresenter>
{
public:
    ErrorScreenViewBase();
    virtual ~ErrorScreenViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void GUI_ResetDevice()
    {
        // Override and implement this function in ErrorScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage tiledImage1;
    ScreenTitleBar screenTitleBar1;
    touchgfx::Container container1;
    touchgfx::Box box1;
    touchgfx::ButtonWithLabel resetBtn;
    touchgfx::TextAreaWithOneWildcard errorDesc;

    /*
     * Wildcard Buffers
     */
    static const uint16_t ERRORDESC_SIZE = 100;
    touchgfx::Unicode::UnicodeChar errorDescBuffer[ERRORDESC_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ErrorScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // ERRORSCREENVIEWBASE_HPP
