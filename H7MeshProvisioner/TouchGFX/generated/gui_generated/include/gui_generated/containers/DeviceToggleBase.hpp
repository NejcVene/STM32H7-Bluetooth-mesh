/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEVICETOGGLEBASE_HPP
#define DEVICETOGGLEBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>

class DeviceToggleBase : public touchgfx::Container
{
public:
    DeviceToggleBase();
    virtual ~DeviceToggleBase();
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void GUI_DeviceConfig()
    {
        // Override and implement this function in DeviceToggle
    }
    virtual void GUI_DeviceToggleState()
    {
        // Override and implement this function in DeviceToggle
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage1;
    touchgfx::TextAreaWithOneWildcard deviceNameTxt;
    touchgfx::IconButtonStyle< touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  >  deviceConfigBtn;
    touchgfx::ToggleButton deviceToggleBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t DEVICENAMETXT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar deviceNameTxtBuffer[DEVICENAMETXT_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DeviceToggleBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<DeviceToggleBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // DEVICETOGGLEBASE_HPP
