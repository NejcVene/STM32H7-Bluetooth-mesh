/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEVICEADDBASE_HPP
#define DEVICEADDBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class DeviceAddBase : public touchgfx::Container
{
public:
    DeviceAddBase();
    virtual ~DeviceAddBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage1;
    touchgfx::TextAreaWithOneWildcard nodeUUID;
    touchgfx::TextAreaWithOneWildcard nodeModels;
    touchgfx::TextAreaWithOneWildcard nodeFeatures;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  deviceAddListBtn;

    /*
     * Wildcard Buffers
     */
    static const uint16_t NODEUUID_SIZE = 10;
    touchgfx::Unicode::UnicodeChar nodeUUIDBuffer[NODEUUID_SIZE];
    static const uint16_t NODEMODELS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar nodeModelsBuffer[NODEMODELS_SIZE];
    static const uint16_t NODEFEATURES_SIZE = 10;
    touchgfx::Unicode::UnicodeChar nodeFeaturesBuffer[NODEFEATURES_SIZE];

private:

};

#endif // DEVICEADDBASE_HPP
