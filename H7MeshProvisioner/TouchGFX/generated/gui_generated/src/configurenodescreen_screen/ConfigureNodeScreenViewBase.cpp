/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/configurenodescreen_screen/ConfigureNodeScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ConfigureNodeScreenViewBase::ConfigureNodeScreenViewBase() :
    flexButtonCallback(this, &ConfigureNodeScreenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &ConfigureNodeScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_H7BACKGROUND_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);
    add(tiledImage1);

    cancelBtn.setBitmaps(Bitmap(BITMAP_H7BUTTON_ID), Bitmap(BITMAP_H7BUTTON_ID));
    cancelBtn.setBitmapXY(0, 0);
    cancelBtn.setText(TypedText(T___SINGLEUSE_0LTB));
    cancelBtn.setTextPosition(0, 97, 121, 121);
    cancelBtn.setTextColors(touchgfx::Color::getColorFromRGB(9, 64, 103), touchgfx::Color::getColorFromRGB(9, 64, 103));
    cancelBtn.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CANCEL_50_50_3DA9FC_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_CANCEL_50_50_3DA9FC_SVG_ID));
    cancelBtn.setIconXY(36, 36);
    cancelBtn.setAction(flexButtonCallback);
    cancelBtn.setPosition(350, 141, 121, 121);
    add(cancelBtn);

    saveBtn.setBitmaps(Bitmap(BITMAP_H7BUTTON_ID), Bitmap(BITMAP_H7BUTTON_ID));
    saveBtn.setBitmapXY(0, 0);
    saveBtn.setText(TypedText(T___SINGLEUSE_EMI2));
    saveBtn.setTextPosition(0, 97, 121, 121);
    saveBtn.setTextColors(touchgfx::Color::getColorFromRGB(9, 64, 103), touchgfx::Color::getColorFromRGB(9, 64, 103));
    saveBtn.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_3DA9FC_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_3DA9FC_SVG_ID));
    saveBtn.setIconXY(36, 36);
    saveBtn.setAction(flexButtonCallback);
    saveBtn.setPosition(350, 10, 121, 121);
    add(saveBtn);

    container1.setPosition(10, 10, 330, 121);
    tiledImage2.setBitmap(touchgfx::Bitmap(BITMAP_H7CONFIGBOX_ID));
    tiledImage2.setPosition(0, 0, 330, 121);
    tiledImage2.setOffset(0, 0);
    container1.add(tiledImage2);

    nodeVendor.setXY(10, 50);
    nodeVendor.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nodeVendor.setLinespacing(0);
    Unicode::snprintf(nodeVendorBuffer, NODEVENDOR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KAJT).getText());
    nodeVendor.setWildcard(nodeVendorBuffer);
    nodeVendor.resizeToCurrentText();
    nodeVendor.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FHXT));
    container1.add(nodeVendor);

    nodeUUID.setXY(10, 30);
    nodeUUID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nodeUUID.setLinespacing(0);
    Unicode::snprintf(nodeUUIDBuffer, NODEUUID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W5ZN).getText());
    nodeUUID.setWildcard(nodeUUIDBuffer);
    nodeUUID.resizeToCurrentText();
    nodeUUID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B8P1));
    container1.add(nodeUUID);

    nodeName.setXY(10, 10);
    nodeName.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nodeName.setLinespacing(0);
    Unicode::snprintf(nodeNameBuffer, NODENAME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2W0E).getText());
    nodeName.setWildcard(nodeNameBuffer);
    nodeName.resizeToCurrentText();
    nodeName.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPFS));
    container1.add(nodeName);

    add(container1);

    allNodeSubsCont.setPosition(10, 141, 330, 121);
    allNodeSubsCont.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    allNodeSubsCont.setScrollbarsAlpha(255);
    tiledImage3.setBitmap(touchgfx::Bitmap(BITMAP_H7CONFIGBOX_ID));
    tiledImage3.setPosition(0, 0, 330, 350);
    tiledImage3.setOffset(0, 0);
    allNodeSubsCont.add(tiledImage3);

    add(allNodeSubsCont);

    GUI_CongPopup.setBackground(touchgfx::BitmapId(BITMAP_H7MODALBACKGROUNDSMALL_ID), 133, 61);
    GUI_CongPopup.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    GUI_CongPopup.setShadeAlpha(100);
    GUI_ConfBtnPopup.setXY(57, 91);
    GUI_ConfBtnPopup.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    GUI_ConfBtnPopup.setLabelText(touchgfx::TypedText(T___SINGLEUSE_52I8));
    GUI_ConfBtnPopup.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    GUI_ConfBtnPopup.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    GUI_ConfBtnPopup.setAction(buttonCallback);
    GUI_CongPopup.add(GUI_ConfBtnPopup);

    GUI_ConfTextPopup.setXY(42, 43);
    GUI_ConfTextPopup.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    GUI_ConfTextPopup.setLinespacing(0);
    GUI_ConfTextPopup.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PIBO));
    GUI_CongPopup.add(GUI_ConfTextPopup);

    add(GUI_CongPopup);
}

ConfigureNodeScreenViewBase::~ConfigureNodeScreenViewBase()
{

}

void ConfigureNodeScreenViewBase::setupScreen()
{

}

void ConfigureNodeScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &saveBtn)
    {
        //GUI_SaveConfNode
        //When saveBtn clicked call virtual function
        //Call GUI_SaveConfNode
        GUI_SaveConfNode();
    }
    if (&src == &cancelBtn)
    {
        //GUI_CancelBtnClicked
        //When cancelBtn clicked call virtual function
        //Call GUI_CancelBtnClicked
        GUI_CancelBtnClicked();
    }
}

void ConfigureNodeScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &GUI_ConfBtnPopup)
    {
        //GUI_ConfBtnClicked
        //When GUI_ConfBtnPopup clicked call virtual function
        //Call GUI_ConfBtnClicked
        GUI_ConfBtnClicked();
    }
}

void ConfigureNodeScreenViewBase::goToHomeScreen()
{
    //GUI_SwitchCreenToHome
    //When goToHomeScreen is called change screen to HomeScreen
    //Go to HomeScreen with screen transition towards East
    application().gotoHomeScreenScreenSlideTransitionEast();
}
