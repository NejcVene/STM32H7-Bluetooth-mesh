/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/DeviceAddBase.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

DeviceAddBase::DeviceAddBase()
{
    setWidth(460);
    setHeight(60);
    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_H7LINEMEDIUM_ID));
    tiledImage1.setPosition(0, 0, 460, 60);
    tiledImage1.setOffset(0, 0);
    add(tiledImage1);

    nodeUUID.setXY(10, 16);
    nodeUUID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nodeUUID.setLinespacing(0);
    Unicode::snprintf(nodeUUIDBuffer, NODEUUID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9YKB).getText());
    nodeUUID.setWildcard(nodeUUIDBuffer);
    nodeUUID.resizeToCurrentText();
    nodeUUID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YBUN));
    add(nodeUUID);

    nodeModels.setXY(199, 16);
    nodeModels.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nodeModels.setLinespacing(0);
    Unicode::snprintf(nodeModelsBuffer, NODEMODELS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z4S0).getText());
    nodeModels.setWildcard(nodeModelsBuffer);
    nodeModels.resizeToCurrentText();
    nodeModels.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UH6U));
    add(nodeModels);

    nodeFeatures.setXY(388, 16);
    nodeFeatures.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    nodeFeatures.setLinespacing(0);
    Unicode::snprintf(nodeFeaturesBuffer, NODEFEATURES_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_T1HH).getText());
    nodeFeatures.setWildcard(nodeFeaturesBuffer);
    nodeFeatures.resizeToCurrentText();
    nodeFeatures.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L7DV));
    add(nodeFeatures);

    deviceAddListBtn.setBitmapXY(0, 0);
    deviceAddListBtn.setPosition(0, 0, 460, 60);
    add(deviceAddListBtn);
}

DeviceAddBase::~DeviceAddBase()
{

}

void DeviceAddBase::initialize()
{

}
