/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/clocksettingsscreen_screen/ClockSettingsScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

ClockSettingsScreenViewBase::ClockSettingsScreenViewBase() :
    buttonCallback(this, &ClockSettingsScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_RAYS_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);
    add(tiledImage1);

    screenTitleBar1.setXY(0, 0);
    add(screenTitleBar1);

    bottomMenu1.setXY(0, 222);
    add(bottomMenu1);

    elements.setPosition(10, 30, 460, 182);
    timeContainerHour.setPosition(0, 0, 189, 110);
    hourBackground.setPosition(0, 0, 79, 110);
    hourBackground.setColor(touchgfx::Color::getColorFromRGB(73, 86, 101));
    timeContainerHour.add(hourBackground);

    hourSetText.setXY(14, 45);
    hourSetText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 254));
    hourSetText.setLinespacing(0);
    Unicode::snprintf(hourSetTextBuffer, HOURSETTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O4YG).getText());
    hourSetText.setWildcard(hourSetTextBuffer);
    hourSetText.resizeToCurrentText();
    hourSetText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VZDO));
    timeContainerHour.add(hourSetText);

    hourText.setXY(18, 0);
    hourText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 254));
    hourText.setLinespacing(0);
    hourText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2QJM));
    timeContainerHour.add(hourText);

    hourUpBtn.setXY(89, 0);
    hourUpBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDPRESSEDTINY_ID), touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDTINY_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFE_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFE_SVG_ID));
    hourUpBtn.setIconXY(26, 0);
    hourUpBtn.setAction(buttonCallback);
    timeContainerHour.add(hourUpBtn);

    hourDownBtn.setXY(89, 60);
    hourDownBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDPRESSEDTINY_ID), touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDTINY_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFE_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFE_SVG_ID));
    hourDownBtn.setIconXY(26, 0);
    hourDownBtn.setAction(buttonCallback);
    timeContainerHour.add(hourDownBtn);

    elements.add(timeContainerHour);

    timeContainerMinute.setPosition(271, 0, 189, 110);
    minuteBackground.setPosition(110, 0, 79, 110);
    minuteBackground.setColor(touchgfx::Color::getColorFromRGB(73, 86, 101));
    timeContainerMinute.add(minuteBackground);

    minuteSetText.setXY(124, 45);
    minuteSetText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 254));
    minuteSetText.setLinespacing(0);
    Unicode::snprintf(minuteSetTextBuffer, MINUTESETTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HZRE).getText());
    minuteSetText.setWildcard(minuteSetTextBuffer);
    minuteSetText.resizeToCurrentText();
    minuteSetText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OGC8));
    timeContainerMinute.add(minuteSetText);

    minuteText.setXY(119, 0);
    minuteText.setColor(touchgfx::Color::getColorFromRGB(255, 255, 254));
    minuteText.setLinespacing(0);
    minuteText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VUYR));
    timeContainerMinute.add(minuteText);

    minuteUpBtn.setXY(0, 0);
    minuteUpBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDPRESSEDTINY_ID), touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDTINY_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFE_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_FFFFFE_SVG_ID));
    minuteUpBtn.setIconXY(26, 0);
    minuteUpBtn.setAction(buttonCallback);
    timeContainerMinute.add(minuteUpBtn);

    minuteDownBtn.setXY(0, 60);
    minuteDownBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDPRESSEDTINY_ID), touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDTINY_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFE_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_FFFFFE_SVG_ID));
    minuteDownBtn.setIconXY(26, 0);
    minuteDownBtn.setAction(buttonCallback);
    timeContainerMinute.add(minuteDownBtn);

    elements.add(timeContainerMinute);

    add(elements);

    saveClockBtn.setXY(190, 162);
    saveClockBtn.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDPRESSEDTINY_ID), touchgfx::Bitmap(BITMAP_BUTTONBACKGROUNDTINY_ID));
    saveClockBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_AVYH));
    saveClockBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 254));
    saveClockBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    saveClockBtn.setAction(buttonCallback);
    add(saveClockBtn);
}

ClockSettingsScreenViewBase::~ClockSettingsScreenViewBase()
{

}

void ClockSettingsScreenViewBase::setupScreen()
{
    screenTitleBar1.initialize();
    bottomMenu1.initialize();
}

void ClockSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &saveClockBtn)
    {
        //GUI_SaveClock
        //When saveClockBtn clicked call virtual function
        //Call GUI_SaveClock
        GUI_SaveClock();
    
        //GUI_SwitchToSettingsScreenAfterInteraction
        //When GUI_SaveClock completed change screen to SettingsScreen
        //Go to SettingsScreen with screen transition towards East
        application().gotoSettingsScreenScreenSlideTransitionEast();
    }
    if (&src == &hourUpBtn)
    {
        //GUI_HourUpBtnClicked
        //When hourUpBtn clicked call virtual function
        //Call GUI_HourUpBtnClicked
        GUI_HourUpBtnClicked();
    }
    if (&src == &hourDownBtn)
    {
        //GUI_HourDownBtnClicked
        //When hourDownBtn clicked call virtual function
        //Call GUI_HourDownBtnClicked
        GUI_HourDownBtnClicked();
    }
    if (&src == &minuteUpBtn)
    {
        //GUI_MinuteUpBtnClicked
        //When minuteUpBtn clicked call virtual function
        //Call GUI_MinuteUpBtnClicked
        GUI_MinuteUpBtnClicked();
    }
    if (&src == &minuteDownBtn)
    {
        //GUI_MinuteDownBtnClicked
        //When minuteDownBtn clicked call virtual function
        //Call GUI_MinuteDownBtnClicked
        GUI_MinuteDownBtnClicked();
    }
}
