#include <gui/adddevicescreen_screen/AddDeviceScreenView.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "node_config.h"
#include "command.h"

AddDeviceScreenView::AddDeviceScreenView()
{

}

void AddDeviceScreenView::setupScreen()
{
    AddDeviceScreenViewBase::setupScreen();
    for (int i = 0; i<maxButtons; i++) {
    	deviceFoundBtn[i].setBitmaps(Bitmap(BITMAP_H7LINEMEDIUM_ID), Bitmap(BITMAP_H7LINEMEDIUM_ID));
    	deviceFoundBtn[i].setBitmapXY(0, 0);
    	deviceFoundBtn[i].setWildcardText(TypedText(T___SINGLEUSE_MVY0));
    	deviceFoundBtn[i].setWildcardTextBuffer(TypedText(T___SINGLEUSE_JF9F).getText());
    	deviceFoundBtn[i].setWildcardTextPosition(0, 16, 460, 60);
    	deviceFoundBtn[i].setWildcardTextColors(touchgfx::Color::getColorFromRGB(10, 10, 10), touchgfx::Color::getColorFromRGB(10, 10, 10));
    	// deviceFoundBtn[i].setAction(flexButtonCallback);
    	deviceFoundBtn[i].setPosition(10, 20 + (60 * i), 460, 60);
    	deviceFoundBtn[i].setVisible(false);
    	scrollableContainer1.add(deviceFoundBtn[i]);
    }
    foudNodeBtn.setVisible(false);
    // modalWindow1.show();
    presenter->GUI_SendCommand(CMD_MESH_ATEP_SCAN);
}

void AddDeviceScreenView::tearDownScreen()
{
    AddDeviceScreenViewBase::tearDownScreen();
}

void AddDeviceScreenView::handleTickEvent() {

	if (disable) {
		modalWindow1.hide();
		return;
	}

	int nextValue;
	int currentValue = circleProgress1.getValue();
	int16_t max = 100;
	int16_t min = 0;

	if (increase) {
		nextValue = currentValue + 1;
		if (nextValue == max) {
			increase = false;
		}
	} else if (!increase) {
		nextValue = currentValue - 1;
		if (nextValue == min) {
			increase = true;
		}
	}
	circleProgress1.setValue(nextValue);

}

void AddDeviceScreenView::GUI_SetDevicesFound(Node_NetworkAddress_t *foundDevices) {

	disable = true;
	touchgfx::Unicode::UnicodeChar unicodeText[40];
	for (int i = 0; i<5; i++) {
		if (foundDevices[i].nodeAddress != NODE_DEF_VAL) {
			Unicode::snprintf(textArea2Buffer, TEXTAREA2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9EOJ).getText());
			deviceFoundBtn[i].setVisible(true);
		}
	}
	scrollableContainer1.invalidateContent();

}
